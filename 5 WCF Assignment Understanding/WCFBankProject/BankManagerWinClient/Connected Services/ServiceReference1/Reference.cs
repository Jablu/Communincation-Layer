//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankManagerWinClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICustomer")]
    public interface ICustomer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Deposite", ReplyAction="http://tempuri.org/ICustomer/DepositeResponse")]
        string Deposite(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Deposite", ReplyAction="http://tempuri.org/ICustomer/DepositeResponse")]
        System.Threading.Tasks.Task<string> DepositeAsync(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Withdraw", ReplyAction="http://tempuri.org/ICustomer/WithdrawResponse")]
        string Withdraw(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Withdraw", ReplyAction="http://tempuri.org/ICustomer/WithdrawResponse")]
        System.Threading.Tasks.Task<string> WithdrawAsync(int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/CheckBalance", ReplyAction="http://tempuri.org/ICustomer/CheckBalanceResponse")]
        string CheckBalance(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/CheckBalance", ReplyAction="http://tempuri.org/ICustomer/CheckBalanceResponse")]
        System.Threading.Tasks.Task<string> CheckBalanceAsync(int custid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerChannel : BankManagerWinClient.ServiceReference1.ICustomer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerClient : System.ServiceModel.ClientBase<BankManagerWinClient.ServiceReference1.ICustomer>, BankManagerWinClient.ServiceReference1.ICustomer {
        
        public CustomerClient() {
        }
        
        public CustomerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Deposite(int amount) {
            return base.Channel.Deposite(amount);
        }
        
        public System.Threading.Tasks.Task<string> DepositeAsync(int amount) {
            return base.Channel.DepositeAsync(amount);
        }
        
        public string Withdraw(int amount) {
            return base.Channel.Withdraw(amount);
        }
        
        public System.Threading.Tasks.Task<string> WithdrawAsync(int amount) {
            return base.Channel.WithdrawAsync(amount);
        }
        
        public string CheckBalance(int custid) {
            return base.Channel.CheckBalance(custid);
        }
        
        public System.Threading.Tasks.Task<string> CheckBalanceAsync(int custid) {
            return base.Channel.CheckBalanceAsync(custid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IManager")]
    public interface IManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/AddCustomer", ReplyAction="http://tempuri.org/IManager/AddCustomerResponse")]
        string AddCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/AddCustomer", ReplyAction="http://tempuri.org/IManager/AddCustomerResponse")]
        System.Threading.Tasks.Task<string> AddCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/DeleteCustomer", ReplyAction="http://tempuri.org/IManager/DeleteCustomerResponse")]
        string DeleteCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/DeleteCustomer", ReplyAction="http://tempuri.org/IManager/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<string> DeleteCustomerAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerChannel : BankManagerWinClient.ServiceReference1.IManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerClient : System.ServiceModel.ClientBase<BankManagerWinClient.ServiceReference1.IManager>, BankManagerWinClient.ServiceReference1.IManager {
        
        public ManagerClient() {
        }
        
        public ManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddCustomer() {
            return base.Channel.AddCustomer();
        }
        
        public System.Threading.Tasks.Task<string> AddCustomerAsync() {
            return base.Channel.AddCustomerAsync();
        }
        
        public string DeleteCustomer() {
            return base.Channel.DeleteCustomer();
        }
        
        public System.Threading.Tasks.Task<string> DeleteCustomerAsync() {
            return base.Channel.DeleteCustomerAsync();
        }
    }
}
